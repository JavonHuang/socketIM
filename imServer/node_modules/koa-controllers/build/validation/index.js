"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
const number_1 = require("./number");
const string_1 = require("./string");
const email_1 = require("./email");
function validateValue(value, paramType, meta) {
    const options = meta.options;
    if (options == null) {
        return;
    }
    if (!existsValidateOption(options)) {
        return;
    }
    _.each(getValidateRules(paramType, meta.name, options), (rule) => {
        rule(value);
    });
}
exports.validateValue = validateValue;
function getValidateRules(paramType, name, options) {
    const rules = [];
    if (options.email != null) {
        rules.push(email_1.validateEmail(name));
    }
    switch (paramType) {
        case 'number':
            if (options.min != null) {
                rules.push(number_1.validateNumberMin(name, options.min));
            }
            if (options.max != null) {
                rules.push(number_1.validateNumberMax(name, options.max));
            }
            break;
        case 'string':
            if (options.min != null) {
                rules.push(string_1.validateStringMin(name, options.min));
            }
            if (options.max != null) {
                rules.push(string_1.validateStringMax(name, options.max));
            }
            break;
        default:
            break;
    }
    return rules;
}
function existsValidateOption(options) {
    return options.min != null
        || options.email != null
        || options.max != null;
}
//# sourceMappingURL=index.js.map